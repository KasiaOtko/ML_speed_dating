data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab('Attribute') + ylab('Importance') + ggtitle('Importance of each attribute by gender') +
geom_text(aes(label = round(value, 2)), position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = round(value, 2)), position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = round(value, 2)), position=position_dodge(width=0.8), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = round(value, 2)), position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = round(value, 1)), position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = round(value, 2)), position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value*100,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width=0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width=1), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width=0.7), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge, vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width = 0.5), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width = 1), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long %>% ggplot(aes(x = name, y = value, fill = factor(gender))) +
geom_bar(stat = 'identity', position = 'dodge', width = 0.8) +
xlab('Attribute') + ylab('Average importance') + ggtitle('Average importance of each attribute by gender') +
geom_text(aes(label = ifelse((fmt <- format(round(value,1), nsmall=1)) == "0.0", "d", as.character(fmt))),
position=position_dodge(width = 0.9), vjust = -0.5, size = 3.2) +
scale_fill_discrete(name="Gender",
breaks=c(0, 1),
labels=c("Women", "Men")) + # Editing legend
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
data_long
attr
df_attr <- subset(SD, !duplicated(SD$iid), select = c(3, 70:75)) %>%
filter(!is.na(attr1_1))
df_attr
df_attr <- subset(SD, !duplicated(SD$iid), select = c(70:75)) %>%
filter(!is.na(attr1_1))
df_attr
df_attr %>% ggplot() + geom_histogram()
df_attr %>% ggplot() + geom_histogram(aes(y = attr1_1))
df_attr %>% ggplot() + geom_histogram(aes(x = attr1_1))
df_attr %>% ggplot() + geom_histogram(aes(x = attr1_1), bins = 30)
df_attr %>% ggplot() + geom_histogram(aes(x = attr1_1), bins = 10)
df_attr %>% ggplot() + geom_histogram(aes(x = attr1_1), bins = 20)
which(colnames(SD) == 'attr3_1')
which(colnames(SD) == 'attr5_1')
which(colnames(SD) == 'attr4_1')
summary(SD[SD$wave >= 6 & SD$wave <= 9,129:134])
summary(SD[SD$wave >= 6 & SD$wave <= 9,76:81])
df <- SD[SD$wave >= 6 & SD$wave <= 9,76:81]
head(df)
df[[colnames(df)[1]]]
for(col in 1:ncol(df)) {
df[[colnames(df)[col]]] <- df[[colnames(df)[col]]]/rowSums(df[[colnames(df)[col]]], na.rm = T)*100
}
for(col in 1:ncol(df)) {
df[[colnames(df)[col]]] <- df[[colnames(df)[col]]]/rowSums(df, na.rm = T)*100
}
head(df)
df <- SD[SD$wave >= 6 & SD$wave <= 9,76:81]
df_norm <- df
for(col in 1:ncol(df)) {
df_norm[[colnames(df)[col]]] <- df[[colnames(df)[col]]]/rowSums(df, na.rm = T)*100
}
head(df)
head(df_norm)
sum(rowSums(df_norm) == 100)
sum(rowSums(df_norm, na.rm = T) == 100)
nrow(df_norm)
unique((rowSums(df_norm, na.rm = T))
unique(rowSums(df_norm, na.rm = T))
unique(rowSums(df_norm, na.rm = T))
unique(rowSums(df_norm, na.rm = T))[1]
unique(rowSums(df_norm, na.rm = T))[2]
unique(rowSums(df_norm, na.rm = T))[3]
unique(rowSums(df_norm, na.rm = T))[4]
which(colnames(SD) == 'attr7_2')
summary(SD[SD$wave >= 6 & SD$wave <= 9,123:128]) # each feature is between 1-10, while they all should add up to 100
which(colnames(SD) == 'attr1_2')
summary(SD[SD$wave >= 6 & SD$wave <= 9,129:134]) # each feature is between 1-10, while they all should add up to 100
which(colnames(SD) == 'attr1_1')
summary(SD[SD$wave >= 6 & SD$wave <= 9,70:76]) # each feature is between 1-10, while they all should add up to 100
SD[SD$wave >= 6 & SD$wave <= 9,70:76]
SD[SD$wave >= 6 & SD$wave <= 9,76:81]
head(SD[SD$wave >= 6 & SD$wave <= 9,76:81])
SD[SD$wave >= 6 & SD$wave <= 9,76:81] <- df_norm
df_norm
SD[SD$wave >= 6 & SD$wave <= 9,76:81]
head(SD[SD$wave >= 6 & SD$wave <= 9,76:81])
head(SD[SD$wave >= 6 & SD$wave <= 9,76:81])
# Waves 6 - 9:
# attr4_1 - shar4_1 have values between 0 and 10
# attr2_1 - shar2_1 OK
# attr1_2 - shar1_2 OK
which(colnames(SD) == 'attr1_1')
summary(SD[SD$wave >= 6 & SD$wave <= 9,70:76]) # each feature is between 1-10, while they all should add up to 100
df <- SD[SD$wave >= 6 & SD$wave <= 9,76:81]
df_norm <- df
for(col in 1:ncol(df)) {
df_norm[[colnames(df)[col]]] <- df[[colnames(df)[col]]]/rowSums(df, na.rm = T)*100
}
unique(rowSums(df_norm, na.rm = T))
SD[SD$wave >= 6 & SD$wave <= 9,76:81] <- df_norm
head(SD[SD$wave >= 6 & SD$wave <= 9,76:81])
# Purpose
goal_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(goal)) %>%
group_by(goal, gender) %>%
summarise(count = n())
goal_df$gender <- ifelse(goal_df$gender == 0, 'Women', 'Men')
goal_idx <- unique(goal_df$goal)
goal_val <- c('Seemed like a fun night out', 'To meet new people', 'To get a date',
'Looking for a serious relationship', 'To say I did it',	'Other')
goal_df$goal_explained <- goal_val[match(goal_df$goal, goal_idx)]
goal_df %>% ggplot(aes(x = goal_explained, y = count, fill = gender)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
# Field analysis
field_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(field_cd)) %>%
group_by(field_explained, gender) %>%
summarize(field_sum = n())
field_df$gender <- ifelse(field_df$gender == 0, 'Women', 'Men')
setwd('C:/Users/katin/Desktop/Folder/STUDIA/DTU/Semestr I/Intro to ML/Project I')
SD <- read.csv('Speed Dating Data.csv')
NAs <- sapply(SD, function(x) sum(is.na(x)))
sort(NAs[which(NAs > 0)])
#filling one missing value in last id row
SD[which(is.na(SD$id)), 1:2] <- 22
# filling 10 missing values in pid columns
SD[which(is.na(SD$pid)), 1:15] # partner's id - 7
SD[which(SD$id == 7 & SD$wave == 5), 1:2] # we have to fill these 10 NAs with 128
SD[which(is.na(SD$pid)), 'pid'] <- 128
# filling missing values in columns <attribute_name>1_1
DF <- SD[, 70:75]
df <- DF[!complete.cases(DF),]
dim(df); sum(rowSums(df, na.rm = T) == 100) # so there are 42 rows where we can impute 0s
df[which(df[,1] + df[,2] + df[,3] == 100),]
df[which(df[,1] + df[,2] + df[,3] == 100), c(4:6)] <- 0
df[which(df[,1] + df[,2] + df[,3] + df[,4] == 100),]
df[which(df[,1] + df[,2] + df[,3] + df[,4] == 100), c(5:6)] <- 0
df[which(df[,1] + df[,2] + df[,3] + df[,4] +df[, 5] == 100),]
df[which(df[,1] + df[,2] + df[,3] + df[,4] +df[, 5] == 100), 6] <- 0
DF[!complete.cases(DF),] <- df
SD[,70:75] <- DF
# adding one column with explanation for race column (matching index with race names)
race_idx <- unique(SD$race)
race_val <- c('Asian', 'European', 'Other', 'Latino', 'Black', NA)
SD$race_explained <- race_val[match(SD$race, race_idx)]
# adding one column with explanation for field_cd column (matching index with race names)
# DISCUSS WITH ALVILS IMPUTING DATA INTO field_cd as 9 (because field is Operations Research)
field_idx <- c(1:18, NA)
field_val <- c('Law', 'Math', 'Social Science, Psychologist', 'Medical Science/Pharmaceuticals/Bio Tech',
'Engineering', 'English/Creative Writing/ Journalism', 'History/Religion/Philosophy',
'Business/Econ/Finance', 'Education, Academia', 'Biological Sciences/Chemistry/Physics',
'Social Work', 'Undergrad/undecided', 'Political Science/International Affairs',
'Film', 'Fine Arts/Arts Administration', 'Languages', 'Architecture', 'Other', 'Other')
SD$field_explained <- field_val[match(SD$field_cd, field_idx)]
# converting income from string to numeric
SD$income <- as.numeric(gsub(',', "", SD$income, fixed = T))
sum(is.na(SD$income))
unique(SD$field_cd)
# Field analysis
field_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(field_cd)) %>%
group_by(field_explained, gender) %>%
summarize(field_sum = n())
field_df$gender <- ifelse(field_df$gender == 0, 'Women', 'Men')
field_df %>% ggplot(aes(x = field_explained, y = field_sum, fill = gender)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
# Field analysis
field_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(field_cd)) %>%
group_by(field_explained) %>%
summarize(field_sum = n())
field_df
field_df %>% ggplot(aes(x = field_explained, y = field_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
# Field analysis
field_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(field_cd)) %>%
group_by(field_explained) %>%
summarize(field_sum = n())
field_df %>% ggplot(aes(x = field_explained, y = field_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
field_df %>% ggplot(aes(x = field_explained, y = field_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip() +
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
field_df %>% ggplot(aes(x = field_explained, y = field_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab('Count') + ylab('Field of study') + ggtitle('Overwiev of participants\' study fields') +
coord_flip() +
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
field_plot <- field_df %>% ggplot(aes(x = field_explained, y = field_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab('Count') + ylab('Field of study') + ggtitle('Overwiev of participants\' study fields') +
coord_flip() +
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained))
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained)
race_df
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge')
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
race_plot
race_df <- rbind('Native American', 0)
race_df
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', 0))
race_df
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
race_plot
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', NA))
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
race_plot
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', 0))
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_x_continuous(labels = race_explained, breaks = 1:6) +
coord_flip()
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', 0))
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_x_continuous(labels = race_explained, breaks = 1:6) +
coord_flip()
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', 0))
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_x_continuous(labels = race_val, breaks = 1:6) +
coord_flip()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_x_discrete(labels = race_val, breaks = 1:6) +
coord_flip()
race_plot
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', 0))
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_y_continuous(labels = race_val, breaks = 1:6) +
coord_flip()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_y_discrete(labels = race_val, breaks = 1:6) +
coord_flip()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge')
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity')
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity') +
scale_x_discrete(drop=FALSE)
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity') +
scale_x_discrete(drop=FALSE)
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity') +
scale_x_discrete()
race_plot
# Field analysis
field_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(field_cd)) %>%
group_by(field_explained) %>%
summarize(field_sum = n())
#field_df$gender <- ifelse(field_df$gender == 0, 'Women', 'Men')
field_plot <- field_df %>% ggplot(aes(x = field_explained, y = field_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab('Count') + ylab('Field of study') + ggtitle('Overwiev of participants\' study fields') +
coord_flip() +
theme_minimal() + # Changing theme
theme(plot.title = element_text(hjust = 0.5), # Centers title
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = 12), # x/y labels position
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = 12))
race_df <- subset(SD, !duplicated(SD$iid)) %>%
filter(!is.na(race_explained)) %>%
group_by(race_explained) %>%
summarize(race_sum = n())
race_df <- rbind(race_df, c('Native American', 0))
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity') +
scale_y_discrete()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity') +
scale_y_discrete()
race_plot
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity') +
scale_x_discrete()
race_plot <- race_df %>% ggplot(aes(x = race_explained, y = race_sum)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_x_discrete()
race_plot
